@using Entities
@using Business


@inject NavigationManager NavManager 



<EditForm Model="oProduct">
    <div class="form-group">
        <label>Producto:</label>
        <InputText class="form-control" @bind-Value="oProduct.ProductName" />
    </div>
    <div class="form-group">
        <label>Descripcion:</label>
        <InputTextArea class="form-control" @bind-Value="oProduct.ProductDescription" />
    </div>
    <div class="form-group">
        <label>Categoria:</label>
        <InputSelect class="form-control" @bind-Value="oProduct.CategoryId">
            @foreach (var category in categories)
            {
                <option value="@category.CategoryId">@category.CategoryName</option>
            }
        </InputSelect>

    </div>

    <input type="button" value="Actualizar Producto" @onclick="UpdateProduct"/>


</EditForm>

@code {

    //Trae el producto por su id de categoria

    [Parameter]
    public string IdProduct { get; set; }

    ProductEntity oProduct = new ProductEntity();
    List<CategoryEntity> categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        categories = B_Category.CategoryList();
        oProduct = B_Product.ProductById(IdProduct);
    }

    private void UpdateProduct()
    {
        B_Product.UpdateProduct(oProduct);
        NavManager.NavigateTo("product/list");
    }
}
